!function(e){function t(t){for(var r,l,i=t[0],c=t[1],u=t[2],f=0,p=[];f<i.length;f++)l=i[f],a[l]&&p.push(a[l][0]),a[l]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(s&&s(t);p.length;)p.shift()();return o.push.apply(o,u||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,i=1;i<n.length;i++){var c=n[i];0!==a[c]&&(r=!1)}r&&(o.splice(t--,1),e=l(l.s=n[0]))}return e}var r={},a={0:0},o=[];function l(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.m=e,l.c=r,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)l.d(n,r,function(t){return e[t]}.bind(null,r));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="";var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var s=c;o.push([42,1]),n()}({20:function(e,t,n){},42:function(e,t,n){"use strict";n.r(t);n(20),n(21);var r=n(0),a=n.n(r),o=n(16),l=n.n(o),i=n(2),c=n(7);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),f(this,p(t).call(this,e))}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(t,a.a.Component),n=t,(r=[{key:"render",value:function(){var e=this.props.numElements?this.props.numElements:50,t=this.props.round.scoreBoard.items.slice(0,e).map(function(e){return n=null,(t=e).positionChange>0?n=a.a.createElement("i",{className:"fa fa-arrow-up"}):t.positionChange<0&&(n=a.a.createElement("i",{className:"fa fa-arrow-down"})),a.a.createElement("tr",{key:t.player.uuid},a.a.createElement("td",null,a.a.createElement(i.b,{to:"/p/".concat(t.player.uuid)},"#",t.position)),a.a.createElement("td",null,n," ",t.positionChange),a.a.createElement("td",null,t.player.name),a.a.createElement("td",null,t.player.elo));var t,n});return a.a.createElement("div",{className:"card card-compact-score-board"},a.a.createElement("div",{className:"card-header text-center"},"Best players. Round #",this.props.round.number),a.a.createElement("table",{className:"table table-striped table-sm"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null),a.a.createElement("th",null),a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Elo"))),a.a.createElement("tbody",null,t)))}}])&&s(n.prototype,r),o&&s(n,o),t}();function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var E=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),d(this,v(t).call(this,e))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){var e=this.props.numElements?this.props.numElements:50,t=this.props.round.matches.slice();t.sort(function(e,t){return t.whitePlayer.originalElo+t.blackPlayer.originalElo-(e.whitePlayer.originalElo+e.blackPlayer.originalElo)});var n=t.slice(0,e).map(function(e){return n=1===(t=e).result?"bg-won":0===t.result?"bg-lose":null,r=0===t.result?"bg-won":1===t.result?"bg-lose":null,a.a.createElement("tr",{key:t.uuid},a.a.createElement("td",null,a.a.createElement(i.b,{to:"/m/".concat(t.uuid)},"#",t.uuid.split("-")[0])),a.a.createElement("td",{className:"text-right ".concat(n)},t.whitePlayer.player.name," (",t.whitePlayer.originalElo,")"),a.a.createElement("td",null,a.a.createElement("i",{className:"fa fa-minus"})),a.a.createElement("td",{className:"text-left ".concat(r)},t.blackPlayer.player.name," (",t.blackPlayer.originalElo,")"));var t,n,r});return a.a.createElement("div",{className:"card card-compact-rounds-board"},a.a.createElement("div",{className:"card-header text-center"},"Best Matches. Round #",this.props.round.number),a.a.createElement("table",{className:"table table-striped table-sm"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null),a.a.createElement("th",{className:"text-right"},"White player"),a.a.createElement("th",null),a.a.createElement("th",{className:"text-left"},"Black player"))),a.a.createElement("tbody",null,n)))}}])&&b(n.prototype,o),l&&b(n,l),t}();function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var N=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=P(t).call(this,e))||"object"!==w(a)&&"function"!=typeof a?k(r):a).onPrevRound=n.onPrevRound.bind(k(n)),n.onNextRound=n.onNextRound.bind(k(n)),n}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(t,a.a.Component),n=t,(r=[{key:"onPrevRound",value:function(e){e.preventDefault(),this.props.onPrevRound&&this.props.onPrevRound()}},{key:"onNextRound",value:function(e){e.preventDefault(),this.props.onNextRound&&this.props.onNextRound()}},{key:"render",value:function(){return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"row"},a.a.createElement("div",{className:"col-12"},a.a.createElement("h1",null,"Round ",this.props.gameRound.number,a.a.createElement("button",{className:"btn btn-outline-primary btn-sm ml-2",disabled:1===this.props.gameRound.number,onClick:this.onPrevRound},"« Prev"),a.a.createElement("button",{className:"btn btn-outline-primary btn-sm ml-2",onClick:this.onNextRound},"Next »"))),a.a.createElement("div",{className:"col-12 col-lg-4"},a.a.createElement(h,{round:this.props.gameRound})),a.a.createElement("div",{className:"col-12 col-lg-8"},a.a.createElement(E,{round:this.props.gameRound}))))}}])&&_(n.prototype,r),o&&_(n,o),t}();function j(e){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t){return!t||"object"!==j(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var T=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),R(this,x(t).call(this,e))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){var e=this,t=this.props.playerInfo.matches.slice().map(function(t){return n=e.props.playerInfo.player,r=t.match,o=1===r.result?"bg-won":0===r.result?"bg-lose":null,l=0===r.result?"bg-won":1===r.result?"bg-lose":null,c=r.whitePlayer.player.uuid==n.uuid?"font-weight-bold":"",u=r.blackPlayer.player.uuid==n.uuid?"font-weight-bold":"",a.a.createElement("tr",{key:r.uuid},a.a.createElement("td",null,a.a.createElement(i.b,{to:"/m/".concat(r.uuid)},"#",r.uuid.split("-")[0])),a.a.createElement("td",{className:"text-right ".concat(o," ").concat(c)},r.whitePlayer.player.name," (",r.whitePlayer.originalElo,")"),a.a.createElement("td",null,a.a.createElement("i",{className:"fa fa-minus"})),a.a.createElement("td",{className:"text-left ".concat(l," ").concat(u)},r.blackPlayer.player.name," (",r.blackPlayer.originalElo,")"));var n,r,o,l,c,u});return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"row"},a.a.createElement("div",{className:"col-12"},a.a.createElement("h1",null,this.props.playerInfo.player.name," (",this.props.playerInfo.player.elo,")")),a.a.createElement("div",{className:"col-12"},a.a.createElement("div",{className:"card card-compact-rounds-board"},a.a.createElement("div",{className:"card-header text-center"},"Matches for ",this.props.playerInfo.player.name),a.a.createElement("table",{className:"table table-striped table-sm"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null),a.a.createElement("th",{className:"text-right"},"White player"),a.a.createElement("th",null),a.a.createElement("th",{className:"text-left"},"Black player"))),a.a.createElement("tbody",null,t))))))}}])&&S(n.prototype,o),l&&S(n,l),t}();function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function W(e,t){return!t||"object"!==I(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function F(e,t){return(F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var L=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),W(this,B(t).call(this,e))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&F(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"row"},a.a.createElement("div",{className:"col-12"},a.a.createElement("h1",{className:"text-center"},"Not found"))))}}])&&M(n.prototype,o),l&&M(n,l),t}();function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function J(e,t){return!t||"object"!==D(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function H(e,t){return(H=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Y=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),J(this,q(t).call(this,e))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&H(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"row"},a.a.createElement("div",{className:"col-12"},a.a.createElement("h1",null,"Match ",this.props.matchInfo.uuid),a.a.createElement("h3",null,a.a.createElement("b",null,"Match result:")," ",1===this.props.matchInfo.result?"White wins":0===this.props.matchInfo.result?"Black wins":"Withdraw"),a.a.createElement("h5",null,a.a.createElement("b",null,"Date:")," ",this.props.matchInfo.date.toLocaleDateString()," ",this.props.matchInfo.date.toLocaleTimeString())),a.a.createElement("div",{className:"col-12 col-lg-6"},a.a.createElement("h2",null,"White player"),a.a.createElement("dl",{className:"row"},a.a.createElement("dt",{className:"col-sm-3"},"Name"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.whitePlayer.player.name),a.a.createElement("dt",{className:"col-sm-3"},"Chance to win"),a.a.createElement("dd",{className:"col-sm-9"},(100*this.props.matchInfo.whitePlayer.chance).toFixed(2),"%"),a.a.createElement("dt",{className:"col-sm-3"},"Original elo"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.whitePlayer.originalElo),a.a.createElement("dt",{className:"col-sm-3"},"Final elo"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.whitePlayer.finalElo))),a.a.createElement("div",{className:"col-12 col-lg-6"},a.a.createElement("h2",null,"Black player"),a.a.createElement("dl",{className:"row"},a.a.createElement("dt",{className:"col-sm-3"},"Name"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.blackPlayer.player.name),a.a.createElement("dt",{className:"col-sm-3"},"Chance to win"),a.a.createElement("dd",{className:"col-sm-9"},(100*this.props.matchInfo.blackPlayer.chance).toFixed(2),"%"),a.a.createElement("dt",{className:"col-sm-3"},"Original elo"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.blackPlayer.originalElo),a.a.createElement("dt",{className:"col-sm-3"},"Final elo"),a.a.createElement("dd",{className:"col-sm-9"},this.props.matchInfo.blackPlayer.finalElo)))))}}])&&A(n.prototype,o),l&&A(n,l),t}();function z(e){return(z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function K(e,t){return!t||"object"!==z(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function U(e,t){return(U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function V(e){var t=e.to,n=e.name;return a.a.createElement(c.a,{path:t,exact:!0,children:function(e){var r=e.match;return a.a.createElement("li",{className:r?"nav-item active":"nav-item"},a.a.createElement(i.b,{className:"nav-link",to:t},n))}})}var X=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),K(this,Q(t).call(this,e))}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(t,a.a.Component),n=t,(r=[{key:"render",value:function(){return a.a.createElement("nav",{className:"navbar navbar-expand-lg navbar-dark bg-dark"},a.a.createElement(i.b,{className:"navbar-brand",to:"/"},"ChessElo (React build)"),a.a.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#appNavbar","aria-controls":"appNavbar","aria-expanded":"false","aria-label":"Toggle navigation"},a.a.createElement("span",{className:"navbar-toggler-icon"})),a.a.createElement("div",{className:"collapse navbar-collapse",id:"appNavbar"},a.a.createElement("ul",{className:"navbar-nav mr-auto"},a.a.createElement(V,{to:"/",name:"Home"}))))}}])&&G(n.prototype,r),o&&G(n,o),t}(),Z=n(10),$=n.n(Z),ee=n(6),te=n.n(ee),ne=n(19);function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var ae=new(n.n(ne).a),oe=function(){var e,t,n;function r(e){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r),te.a.undefined(e)||te.a.null(e)||!te.a.string(e)||te.a.empty(e.trim()))throw new Error("You should specify name argument");this._name=e,this._elo=1500,this._id=$()()}return e=r,(t=[{key:"uuid",get:function(){return this._id}},{key:"elo",get:function(){return this._elo},set:function(e){this._elo=e}},{key:"name",get:function(){return this._name}}])&&re(e.prototype,t),n&&re(e,n),r}();oe.generate=function(){return new oe(ae.name({middle:!0}))};var le=oe;function ie(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var ce=function(){var e,t,n;function r(e,t,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r),this._number=e,this._matches=t,this._scoreBoard=n,this._playDate=a}return e=r,(t=[{key:"playDate",get:function(){return this._playDate}},{key:"number",get:function(){return this._number}},{key:"matches",get:function(){return this._matches}},{key:"scoreBoard",get:function(){return this._scoreBoard}}])&&ie(e.prototype,t),n&&ie(e,n),r}();function ue(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function fe(e,t,n){return t&&se(e.prototype,t),n&&se(e,n),e}var pe=function(){function e(t,n){if(ue(this,e),te.a.null(t)||!(t instanceof le))throw new Error("White player should be an instance of Player");if(te.a.null(n)||!(n instanceof le))throw new Error("Black player should be an instance of Player");this._id=$()();var r=Math.pow(10,t.elo/400),a=Math.pow(10,n.elo/400),o=r/(r+a),l=a/(r+a);this._whitePlayer=new me(t,o),this._blackPlayer=new me(n,l),this._result=null,this._date=null}return fe(e,[{key:"uuid",get:function(){return this._id}},{key:"whitePlayer",get:function(){return this._whitePlayer}},{key:"blackPlayer",get:function(){return this._blackPlayer}},{key:"result",get:function(){return this._result}},{key:"date",get:function(){return this._date}}]),fe(e,[{key:"play",value:function(e,t){if(null!=this._result)throw new Error("match was already played");if([1,.5,0].indexOf(e)<0)throw new Error("matchResult should be 1, 0.5 or 0 values");switch(this._result=e,this._date=t,e){case 1:this.whitePlayer.player.elo+=this.whitePlayer.onWin,this.blackPlayer.player.elo+=this.blackPlayer.onLose;break;case.5:this.whitePlayer.player.elo+=this.whitePlayer.onWithdraw,this.blackPlayer.player.elo+=this.blackPlayer.onWithdraw;break;case 0:this.whitePlayer.player.elo+=this.whitePlayer.onLose,this.blackPlayer.player.elo+=this.blackPlayer.onWin}this.whitePlayer.finalElo=this.whitePlayer.player.elo,this.blackPlayer.finalElo=this.blackPlayer.player.elo}}]),e}(),me=function(){function e(t,n){ue(this,e),this._player=t,this._chance=n,this._kFactor=this._player.elo>2400?15:30,this._originalElo=t.elo,this._finalElo=null,this._onWin=Math.round(this._kFactor*(1-n)),this._onLose=Math.round(this._kFactor*(0-n)),this._onWithdraw=Math.round(this._kFactor*(.5-n))}return fe(e,[{key:"player",get:function(){return this._player}},{key:"chance",get:function(){return this._chance}},{key:"kFactor",get:function(){return this._kFactor}},{key:"originalElo",get:function(){return this._originalElo}},{key:"finalElo",get:function(){return this._finalElo},set:function(e){this._finalElo=e}},{key:"onWin",get:function(){return this._onWin}},{key:"onLose",get:function(){return this._onLose}},{key:"onWithdraw",get:function(){return this._onWithdraw}}]),e}(),he=pe;function ye(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function be(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function de(e,t,n){return t&&be(e.prototype,t),n&&be(e,n),e}var ve=function(){function e(t,n){var r=this;ye(this,e),this._items=[];var a=t.slice();a.sort(function(e,t){return t.elo-e.elo});for(var o=function(e){var t=a[e],o=null;n&&(o=n.items.filter(function(e){return e.player.uuid==t.uuid}).shift());var l=new ge(t,e+1,o);r._items.push(l)},l=0;l<a.length;l++)o(l)}return de(e,[{key:"items",get:function(){return this._items}}]),e}(),ge=function(){function e(t,n,r){ye(this,e),this._player=t,this._position=n,this._positionChange=0,null!=r&&(this._positionChange=r.position-this.position)}return de(e,[{key:"position",get:function(){return this._position}},{key:"positionChange",get:function(){return this._positionChange}},{key:"player",get:function(){return this._player}}]),e}(),Ee=ve;function we(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _e=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,r;return t=e,(n=[{key:"playAMatch",value:function(e,t){if(!(e&&e instanceof he))throw new Error("match argument is required");var n=Math.random(),r=Math.random();n<=e.whitePlayer.chance&&r<=e.blackPlayer.chance||n>e.whitePlayer.chance&&r>e.blackPlayer.chance?e.play(.5,t):n<e.whitePlayer.chance?e.play(1,t):e.play(0,t)}}])&&we(t.prototype,n),r&&we(t,r),e}());function Pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ke(e,t,n){return t&&Pe(e.prototype,t),n&&Pe(e,n),e}function Oe(){for(var e=[],t=0;t<1e3;t++)e.push(le.generate());return e}var Ne=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._players=Oe(),this._rounds=[],Oe(),this.playNextRound()}return ke(e,[{key:"players",get:function(){return this._players}},{key:"rounds",get:function(){return this._rounds}}]),ke(e,[{key:"playNextRound",value:function(){var e=this.rounds.length>0?this.rounds[this.rounds.length-1].scoreBoard:null,t=this.rounds.length+1,n=new Date,r=function(e,t){var n=[],r=e.slice();r.sort(function(e,t){return 10*Math.random()-5});for(var a=r.splice(0,Math.floor(r.length/2)),o=Math.min(a.length,r.length),l=0;l<o;l++){var i=a[l],c=r[l],u=new he(i,c);_e.playAMatch(u,t),n.push(u)}return n}(this.players,n),a=new Ee(this.players,e);this._rounds.push(new ce(t,r,a,n))}},{key:"getLastRound",value:function(){return 0===this.rounds.length?null:this.rounds[this.rounds.length-1]}},{key:"getPlayerInfo",value:function(e){var t={player:null,matches:[]};if(t.player=this.players.filter(function(t){return t.uuid==e}).shift(),!t.player)return null;var n=!0,r=!1,a=void 0;try{for(var o,l=this.rounds[Symbol.iterator]();!(n=(o=l.next()).done);n=!0){var i=o.value,c=i.matches.filter(function(t){return t.whitePlayer.player.uuid==e||t.blackPlayer.player.uuid==e}).shift();c&&t.matches.push({roundNumber:i.number,match:c})}}catch(e){r=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(r)throw a}}return t}},{key:"getMatchInfo",value:function(e){var t=null,n=!0,r=!1,a=void 0;try{for(var o,l=this.rounds[Symbol.iterator]();!(n=(o=l.next()).done);n=!0){if(t=o.value.matches.filter(function(t){return t.uuid==e}).shift())break}}catch(e){r=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(r)throw a}}return t}}]),e}();function je(e){return(je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Re(e){return(Re=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function xe(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ce(e,t){return(Ce=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Te=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(a=Re(t).call(this,e))||"object"!==je(a)&&"function"!=typeof a?xe(r):a).game=new Ne,n.currentRoundNumber=n.game.rounds[n.game.rounds.length-1].number,n.state={gameRound:n.game.getLastRound()},n.onPrevRound=n.onPrevRound.bind(xe(n)),n.onNextRound=n.onNextRound.bind(xe(n)),n}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ce(e,t)}(t,r["Component"]),n=t,(o=[{key:"onPrevRound",value:function(){1!==this.currentRoundNumber&&(this.currentRoundNumber-=1,this.setState({gameRound:this.game.rounds[this.currentRoundNumber-1]}))}},{key:"onNextRound",value:function(){this.currentRoundNumber+1>this.game.rounds.length&&this.game.playNextRound(),this.currentRoundNumber+=1,this.setState({gameRound:this.game.rounds[this.currentRoundNumber-1]})}},{key:"render",value:function(){var e=this;return a.a.createElement(i.a,null,a.a.createElement(X,{location:this.props.location}),a.a.createElement(c.a,{exact:!0,path:"/",render:function(){return a.a.createElement(N,{gameRound:e.state.gameRound,onPrevRound:e.onPrevRound,onNextRound:e.onNextRound})}}),a.a.createElement(c.a,{exact:!0,path:"/m/:uuid",render:function(t){var n=t.match,r=t.history,o=e.game.getMatchInfo(n.params.uuid);return o?a.a.createElement(Y,{matchInfo:o}):(r.push("/404/"),null)}}),a.a.createElement(c.a,{exact:!0,path:"/p/:uuid",render:function(t){var n=t.match,r=t.history,o=e.game.getPlayerInfo(n.params.uuid);return o?a.a.createElement(T,{playerInfo:o}):(r.push("/404/"),null)}}),a.a.createElement(c.a,{path:"/404/",component:L}))}}])&&Se(n.prototype,o),l&&Se(n,l),t}();l.a.render(a.a.createElement(Te,null),document.getElementById("root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9jb21wb25lbnRzL2NhcmRzL0NvbXBhY3RTY29yZUJvYXJkLmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvY29tcG9uZW50cy9jYXJkcy9Db21wYWN0Um91bmRzQm9hcmQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9jb21wb25lbnRzL3BhZ2VzL0luZGV4UGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMvUGxheWVyUGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMvTm90Rm91bmRQYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlcy9NYXRjaFBhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9jb21wb25lbnRzL05hdmJhci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL21vZGVscy9QbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9tb2RlbHMvUm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9tb2RlbHMvTWF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9tb2RlbHMvU2NvcmVCb2FyZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3NlcnZpY2VzL0Vsb1NlcnZpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9tb2RlbHMvR2FtZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL01haW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC5qcyJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsImRhdGEiLCJtb2R1bGVJZCIsImNodW5rSWQiLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwiZXhlY3V0ZU1vZHVsZXMiLCJpIiwicmVzb2x2ZXMiLCJsZW5ndGgiLCJpbnN0YWxsZWRDaHVua3MiLCJwdXNoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibW9kdWxlcyIsInBhcmVudEpzb25wRnVuY3Rpb24iLCJzaGlmdCIsImRlZmVycmVkTW9kdWxlcyIsImFwcGx5IiwiY2hlY2tEZWZlcnJlZE1vZHVsZXMiLCJyZXN1bHQiLCJkZWZlcnJlZE1vZHVsZSIsImZ1bGZpbGxlZCIsImoiLCJkZXBJZCIsInNwbGljZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJzIiwiaW5zdGFsbGVkTW9kdWxlcyIsIjAiLCJleHBvcnRzIiwibW9kdWxlIiwibCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwIiwianNvbnBBcnJheSIsIndpbmRvdyIsIm9sZEpzb25wRnVuY3Rpb24iLCJzbGljZSIsIkNvbXBhY3RTY29yZUJvYXJkIiwicHJvcHMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfZ2V0UHJvdG90eXBlT2YiLCJSZWFjdCIsIkNvbXBvbmVudCIsIm1heEl0ZW1zIiwibnVtRWxlbWVudHMiLCJpdGVtcyIsInJvdW5kIiwic2NvcmVCb2FyZCIsIm1hcCIsIngiLCJhcnJvdyIsInBvc2l0aW9uQ2hhbmdlIiwicmVhY3RfZGVmYXVsdCIsImEiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwicGxheWVyIiwidXVpZCIsInJlYWN0X3JvdXRlcl9kb20iLCJ0byIsImNvbmNhdCIsInBvc2l0aW9uIiwiZWxvIiwibnVtYmVyIiwiQ29tcGFjdFJvdW5kc0JvYXJkIiwiQ29tcGFjdFJvdW5kc0JvYXJkX2NsYXNzQ2FsbENoZWNrIiwiQ29tcGFjdFJvdW5kc0JvYXJkX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJDb21wYWN0Um91bmRzQm9hcmRfZ2V0UHJvdG90eXBlT2YiLCJtYXRjaGVzIiwic29ydCIsImIiLCJ3aGl0ZVBsYXllciIsIm9yaWdpbmFsRWxvIiwiYmxhY2tQbGF5ZXIiLCJ3aGl0ZUNsYXNzIiwibWF0Y2giLCJibGFja0NsYXNzIiwic3BsaXQiLCJJbmRleFBhZ2UiLCJfdGhpcyIsIkluZGV4UGFnZV9jbGFzc0NhbGxDaGVjayIsIkluZGV4UGFnZV9nZXRQcm90b3R5cGVPZiIsIm9uUHJldlJvdW5kIiwiSW5kZXhQYWdlX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIm9uTmV4dFJvdW5kIiwiYXJncyIsInByZXZlbnREZWZhdWx0IiwiZ2FtZVJvdW5kIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwiY2FyZHNfQ29tcGFjdFNjb3JlQm9hcmQiLCJjYXJkc19Db21wYWN0Um91bmRzQm9hcmQiLCJQbGF5ZXJQYWdlIiwiUGxheWVyUGFnZV9jbGFzc0NhbGxDaGVjayIsIlBsYXllclBhZ2VfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlBsYXllclBhZ2VfZ2V0UHJvdG90eXBlT2YiLCJwbGF5ZXJJbmZvIiwid2hpdGVCb2xkIiwiYmxhY2tCb2xkIiwiTm90Rm91bmRQYWdlIiwiTm90Rm91bmRQYWdlX2NsYXNzQ2FsbENoZWNrIiwiTm90Rm91bmRQYWdlX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJOb3RGb3VuZFBhZ2VfZ2V0UHJvdG90eXBlT2YiLCJNYXRjaFBhZ2UiLCJNYXRjaFBhZ2VfY2xhc3NDYWxsQ2hlY2siLCJNYXRjaFBhZ2VfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIk1hdGNoUGFnZV9nZXRQcm90b3R5cGVPZiIsIm1hdGNoSW5mbyIsImRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJjaGFuY2UiLCJ0b0ZpeGVkIiwiZmluYWxFbG8iLCJOYXZJdGVtIiwiX3JlZiIsInJlYWN0X3JvdXRlciIsInBhdGgiLCJleGFjdCIsImNoaWxkcmVuIiwiX3JlZjIiLCJOYXZiYXIiLCJOYXZiYXJfY2xhc3NDYWxsQ2hlY2siLCJOYXZiYXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIk5hdmJhcl9nZXRQcm90b3R5cGVPZiIsInR5cGUiLCJkYXRhLXRvZ2dsZSIsImRhdGEtdGFyZ2V0IiwiYXJpYS1jb250cm9scyIsImFyaWEtZXhwYW5kZWQiLCJhcmlhLWxhYmVsIiwiaWQiLCIkQ2hhbmNlIiwiUGxheWVyIiwiUGxheWVyX2NsYXNzQ2FsbENoZWNrIiwiaXMiLCJ1bmRlZmluZWQiLCJudWxsIiwic3RyaW5nIiwiZW1wdHkiLCJ0cmltIiwiRXJyb3IiLCJfbmFtZSIsIl9lbG8iLCJfaWQiLCJuZXdFbG8iLCJnZW5lcmF0ZSIsIm1pZGRsZSIsIlJvdW5kIiwicm91bmROdW1iZXIiLCJSb3VuZF9jbGFzc0NhbGxDaGVjayIsIl9udW1iZXIiLCJfbWF0Y2hlcyIsIl9zY29yZUJvYXJkIiwiX3BsYXlEYXRlIiwiTWF0Y2giLCJNYXRjaF9jbGFzc0NhbGxDaGVjayIsInFBIiwiTWF0aCIsInBvdyIsInFCIiwid2hpdGVDaGFuY2UiLCJibGFja0NoYW5jZSIsIl93aGl0ZVBsYXllciIsIk1hdGNoUGxheWVyIiwiX2JsYWNrUGxheWVyIiwiX3Jlc3VsdCIsIl9kYXRlIiwibWF0Y2hSZXN1bHQiLCJpbmRleE9mIiwib25XaW4iLCJvbkxvc2UiLCJvbldpdGhkcmF3IiwiX3BsYXllciIsIl9jaGFuY2UiLCJfa0ZhY3RvciIsIl9vcmlnaW5hbEVsbyIsIl9maW5hbEVsbyIsIl9vbldpbiIsIl9vbkxvc2UiLCJfb25XaXRoZHJhdyIsIlNjb3JlQm9hcmQiLCJwbGF5ZXJzIiwicHJldmlvdXNTY29yZUJvYXJkIiwiU2NvcmVCb2FyZF9jbGFzc0NhbGxDaGVjayIsIl9pdGVtcyIsIm5ld1BsYXllcnNBcnIiLCJfbG9vcCIsInByZXZpb3VzSXRlbSIsImZpbHRlciIsIml0ZW0iLCJTY29yZUJvYXJkSXRlbSIsIl9wb3NpdGlvbiIsIl9wb3NpdGlvbkNoYW5nZSIsInNlcnZpY2VzX0Vsb1NlcnZpY2UiLCJFbG9TZXJ2aWNlIiwiRWxvU2VydmljZV9jbGFzc0NhbGxDaGVjayIsIndoaXRlRGljZSIsInJhbmRvbSIsImJsYWNrRGljZSIsInBsYXkiLCJfZ2VuZXJhdGVQbGF5ZXJzIiwiR2FtZSIsIkdhbWVfY2xhc3NDYWxsQ2hlY2siLCJfcGxheWVycyIsIl9yb3VuZHMiLCJwbGF5TmV4dFJvdW5kIiwicm91bmRzIiwiRGF0ZSIsInBsYXllcnNSYW5kb20iLCJmbG9vciIsIm1heExlbmd0aCIsIm1pbiIsImVsb1NlcnZpY2UiLCJwbGF5QU1hdGNoIiwiX2dlbmVyYXRlTWF0Y2hlcyIsInBsYXllclV1aWQiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiaXRlcmF0b3IiLCJuZXh0IiwiZG9uZSIsImVyciIsInJldHVybiIsIm1hdGNoVXVpZCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yIiwiX2RpZEl0ZXJhdG9yRXJyb3IyIiwiX2l0ZXJhdG9yRXJyb3IyIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsIk1haW4iLCJNYWluX2NsYXNzQ2FsbENoZWNrIiwiTWFpbl9nZXRQcm90b3R5cGVPZiIsImdhbWUiLCJjdXJyZW50Um91bmROdW1iZXIiLCJzdGF0ZSIsImdldExhc3RSb3VuZCIsIk1haW5fYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwic2V0U3RhdGUiLCJfdGhpczIiLCJjb21wb25lbnRzX05hdmJhciIsImxvY2F0aW9uIiwicmVuZGVyIiwicGFnZXNfSW5kZXhQYWdlIiwiaGlzdG9yeSIsImdldE1hdGNoSW5mbyIsInBhcmFtcyIsInBhZ2VzX01hdGNoUGFnZSIsImdldFBsYXllckluZm8iLCJwYWdlc19QbGF5ZXJQYWdlIiwiY29tcG9uZW50IiwiUmVhY3REb20iLCJhcHBfTWFpbiIsImRvY3VtZW50IiwiZ2V0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QUFPaE0sTUFFcEQsT0FBSWtELEVBS0l2RCxFQUFBQyxFQUFBQyxjQUFDb00sRUFBRCxDQUFXL0ksVUFBV0EsS0FKNUI0SSxFQUFReFEsS0FBSyxTQUNOLFNBTVhxRSxFQUFBQyxFQUFBQyxjQUFDOEQsRUFBQSxFQUFELENBQU9FLE9BQUssRUFBQ0QsS0FBSyxXQUFXZ0ksT0FBUSxTQUFBN0gsR0FBc0IsSUFBcEI3QyxFQUFvQjZDLEVBQXBCN0MsTUFBTzRLLEVBQWEvSCxFQUFiK0gsUUFDeEN2SixFQUFha0osRUFBS04sS0FBS2UsY0FBY2hMLEVBQU04SyxPQUFPaE0sTUFFdEQsT0FBSXVDLEVBS0k1QyxFQUFBQyxFQUFBQyxjQUFDc00sRUFBRCxDQUFZNUosV0FBWUEsS0FKOUJ1SixFQUFReFEsS0FBSyxTQUNOLFNBT1hxRSxFQUFBQyxFQUFBQyxjQUFDOEQsRUFBQSxFQUFELENBQU9DLEtBQUssUUFBUXdJLFVBQVcxSiw0Q0MvRXpDMkosSUFBU1QsT0FBT2pNLEVBQUFDLEVBQUFDLGNBQUN5TSxHQUFELE1BQVVDLFNBQVNDLGVBQWUiLCJmaWxlIjoibWFpbi5jZTFjOGQ3OTdiMDQ5NWJmMGRlZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0cmV0dXJuIHJlc3VsdDtcbiBcdH1cblxuIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3NcbiBcdC8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuIFx0Ly8gUHJvbWlzZSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbiBcdHZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG4gXHRcdDA6IDBcbiBcdH07XG5cbiBcdHZhciBkZWZlcnJlZE1vZHVsZXMgPSBbXTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0dmFyIGpzb25wQXJyYXkgPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gfHwgW107XG4gXHR2YXIgb2xkSnNvbnBGdW5jdGlvbiA9IGpzb25wQXJyYXkucHVzaC5iaW5kKGpzb25wQXJyYXkpO1xuIFx0anNvbnBBcnJheS5wdXNoID0gd2VicGFja0pzb25wQ2FsbGJhY2s7XG4gXHRqc29ucEFycmF5ID0ganNvbnBBcnJheS5zbGljZSgpO1xuIFx0Zm9yKHZhciBpID0gMDsgaSA8IGpzb25wQXJyYXkubGVuZ3RoOyBpKyspIHdlYnBhY2tKc29ucENhbGxiYWNrKGpzb25wQXJyYXlbaV0pO1xuIFx0dmFyIHBhcmVudEpzb25wRnVuY3Rpb24gPSBvbGRKc29ucEZ1bmN0aW9uO1xuXG5cbiBcdC8vIGFkZCBlbnRyeSBtb2R1bGUgdG8gZGVmZXJyZWQgbGlzdFxuIFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2goWzQyLDFdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7TGlua30gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmZ1bmN0aW9uIENvbXBhY3RTY29yZUJvYXJkSXRlbShwcm9wcykge1xuXG4gIGxldCBhcnJvdyA9IG51bGw7XG5cbiAgaWYocHJvcHMucG9zaXRpb25DaGFuZ2UgPiAwKSB7XG4gICAgYXJyb3cgPSA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvdy11cFwiPjwvaT5cbiAgfVxuICBlbHNlIGlmKHByb3BzLnBvc2l0aW9uQ2hhbmdlIDwgMCkge1xuICAgIGFycm93ID0gPGkgY2xhc3NOYW1lPVwiZmEgZmEtYXJyb3ctZG93blwiPjwvaT5cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgICA8dHIga2V5PXtwcm9wcy5wbGF5ZXIudXVpZH0+XG4gICAgICAgIDx0ZD48TGluayB0bz17YC9wLyR7cHJvcHMucGxheWVyLnV1aWR9YH0+I3twcm9wcy5wb3NpdGlvbn08L0xpbms+PC90ZD5cbiAgICAgICAgPHRkPnthcnJvd30ge3Byb3BzLnBvc2l0aW9uQ2hhbmdlfTwvdGQ+XG4gICAgICAgIDx0ZD57cHJvcHMucGxheWVyLm5hbWV9PC90ZD5cbiAgICAgICAgPHRkPntwcm9wcy5wbGF5ZXIuZWxvfTwvdGQ+XG4gICAgICA8L3RyPlxuICApXG59XG5cbmNsYXNzIENvbXBhY3RTY29yZUJvYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuXG4gIHJlbmRlcigpIHtcblxuICAgIGxldCBtYXhJdGVtcyA9IHRoaXMucHJvcHMubnVtRWxlbWVudHMgPyB0aGlzLnByb3BzLm51bUVsZW1lbnRzIDogNTA7XG4gICAgbGV0IGl0ZW1zID0gdGhpcy5wcm9wcy5yb3VuZC5zY29yZUJvYXJkLml0ZW1zLnNsaWNlKDAsIG1heEl0ZW1zICkubWFwKHggPT4gQ29tcGFjdFNjb3JlQm9hcmRJdGVtKHgpKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZCBjYXJkLWNvbXBhY3Qtc2NvcmUtYm9hcmRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyIHRleHQtY2VudGVyXCI+QmVzdCBwbGF5ZXJzLiBSb3VuZCAje3RoaXMucHJvcHMucm91bmQubnVtYmVyfTwvZGl2PlxuICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLXNtXCI+XG4gICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0aD48L3RoPlxuICAgICAgICAgICAgICA8dGg+PC90aD5cbiAgICAgICAgICAgICAgPHRoPk5hbWU8L3RoPlxuICAgICAgICAgICAgICA8dGg+RWxvPC90aD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICB7aXRlbXN9XG4gICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBDb21wYWN0U2NvcmVCb2FyZDsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7TGlua30gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cblxuZnVuY3Rpb24gQ29tcGFjdFJvdW5kc0JvYXJkSXRlbShtYXRjaCkge1xuXG4gIGxldCB3aGl0ZUNsYXNzID0gbWF0Y2gucmVzdWx0ID09PSAxID8gJ2JnLXdvbicgOiBtYXRjaC5yZXN1bHQgPT09IDAgPyAnYmctbG9zZScgOiBudWxsO1xuICBsZXQgYmxhY2tDbGFzcyA9IG1hdGNoLnJlc3VsdCA9PT0gMCA/ICdiZy13b24nIDogbWF0Y2gucmVzdWx0ID09PSAxID8gJ2JnLWxvc2UnIDogbnVsbDtcblxuICByZXR1cm4gKFxuICAgICAgPHRyIGtleT17bWF0Y2gudXVpZH0+XG4gICAgICAgIDx0ZD48TGluayB0bz17YC9tLyR7bWF0Y2gudXVpZH1gfT4je21hdGNoLnV1aWQuc3BsaXQoJy0nKVswXX08L0xpbms+PC90ZD5cbiAgICAgICAgPHRkIGNsYXNzTmFtZT17YHRleHQtcmlnaHQgJHt3aGl0ZUNsYXNzfWB9PlxuICAgICAgICAgIHttYXRjaC53aGl0ZVBsYXllci5wbGF5ZXIubmFtZX0gKHttYXRjaC53aGl0ZVBsYXllci5vcmlnaW5hbEVsb30pXG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD48aSBjbGFzc05hbWU9XCJmYSBmYS1taW51c1wiPjwvaT48L3RkPlxuICAgICAgICA8dGQgY2xhc3NOYW1lPXtgdGV4dC1sZWZ0ICR7YmxhY2tDbGFzc31gfT5cbiAgICAgICAgICB7bWF0Y2guYmxhY2tQbGF5ZXIucGxheWVyLm5hbWV9ICh7bWF0Y2guYmxhY2tQbGF5ZXIub3JpZ2luYWxFbG99KVxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgKTtcbn1cblxuY2xhc3MgQ29tcGFjdFJvdW5kc0JvYXJkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG5cbiAgICBsZXQgbWF4SXRlbXMgPSB0aGlzLnByb3BzLm51bUVsZW1lbnRzID8gdGhpcy5wcm9wcy5udW1FbGVtZW50cyA6IDUwO1xuICAgIGxldCBtYXRjaGVzID0gdGhpcy5wcm9wcy5yb3VuZC5tYXRjaGVzLnNsaWNlKCk7XG4gICAgbWF0Y2hlcy5zb3J0KChhLCBiKSA9PiAoYi53aGl0ZVBsYXllci5vcmlnaW5hbEVsbyArIGIuYmxhY2tQbGF5ZXIub3JpZ2luYWxFbG8pIC0gKGEud2hpdGVQbGF5ZXIub3JpZ2luYWxFbG8gKyBhLmJsYWNrUGxheWVyLm9yaWdpbmFsRWxvKSk7XG5cbiAgICBsZXQgaXRlbXMgPSBtYXRjaGVzLnNsaWNlKDAsIG1heEl0ZW1zKS5tYXAoeCA9PiBDb21wYWN0Um91bmRzQm9hcmRJdGVtKHgpKTtcblxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkIGNhcmQtY29tcGFjdC1yb3VuZHMtYm9hcmRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyIHRleHQtY2VudGVyXCI+QmVzdCBNYXRjaGVzLiBSb3VuZCAje3RoaXMucHJvcHMucm91bmQubnVtYmVyfTwvZGl2PlxuICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLXNtXCI+XG4gICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0aD48L3RoPlxuICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidGV4dC1yaWdodFwiPldoaXRlIHBsYXllcjwvdGg+XG4gICAgICAgICAgICAgIDx0aD48L3RoPlxuICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+QmxhY2sgcGxheWVyPC90aD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAge2l0ZW1zfVxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBDb21wYWN0Um91bmRzQm9hcmQ7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IENvbXBhY3RTY29yZUJvYXJkIGZyb20gJy4uL2NhcmRzL0NvbXBhY3RTY29yZUJvYXJkJztcbmltcG9ydCBDb21wYWN0Um91bmRzQm9hcmQgZnJvbSAnLi4vY2FyZHMvQ29tcGFjdFJvdW5kc0JvYXJkJztcblxuY2xhc3MgSW5kZXhQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMub25QcmV2Um91bmQgPSB0aGlzLm9uUHJldlJvdW5kLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbk5leHRSb3VuZCA9IHRoaXMub25OZXh0Um91bmQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9uUHJldlJvdW5kKGFyZ3MpIHtcbiAgICBhcmdzLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYodGhpcy5wcm9wcy5vblByZXZSb3VuZCkgeyB0aGlzLnByb3BzLm9uUHJldlJvdW5kKCk7IH1cbiAgfVxuXG4gIG9uTmV4dFJvdW5kKGFyZ3MpIHtcbiAgICBhcmdzLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYodGhpcy5wcm9wcy5vbk5leHRSb3VuZCkgeyB0aGlzLnByb3BzLm9uTmV4dFJvdW5kKCk7IH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICA8aDE+XG4gICAgICAgICAgICAgICAgUm91bmQge3RoaXMucHJvcHMuZ2FtZVJvdW5kLm51bWJlcn1cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tb3V0bGluZS1wcmltYXJ5IGJ0bi1zbSBtbC0yXCIgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZ2FtZVJvdW5kLm51bWJlciA9PT0gMX0gb25DbGljaz17dGhpcy5vblByZXZSb3VuZH0+JmxhcXVvOyBQcmV2PC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLW91dGxpbmUtcHJpbWFyeSBidG4tc20gbWwtMlwiIG9uQ2xpY2s9e3RoaXMub25OZXh0Um91bmR9Pk5leHQgJnJhcXVvOzwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMiBjb2wtbGctNFwiPlxuICAgICAgICAgICAgICA8Q29tcGFjdFNjb3JlQm9hcmQgcm91bmQ9e3RoaXMucHJvcHMuZ2FtZVJvdW5kfS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTEyIGNvbC1sZy04XCI+XG4gICAgICAgICAgICAgIDxDb21wYWN0Um91bmRzQm9hcmQgcm91bmQ9e3RoaXMucHJvcHMuZ2FtZVJvdW5kfS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFBhZ2U7IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0xpbmt9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbmNsYXNzIFBsYXllclBhZ2UgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcblxuICAgIGxldCBtYXRjaGVzID0gdGhpcy5wcm9wcy5wbGF5ZXJJbmZvLm1hdGNoZXMuc2xpY2UoKTtcbiAgICBsZXQgaXRlbXMgPSBtYXRjaGVzLm1hcCh4ID0+IHtcbiAgICAgIHJldHVybiBDb21wYWN0UGxheWVyTWF0Y2hlc0l0ZW0odGhpcy5wcm9wcy5wbGF5ZXJJbmZvLnBsYXllciwgeC5tYXRjaCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICA8aDE+e3RoaXMucHJvcHMucGxheWVySW5mby5wbGF5ZXIubmFtZX0gKHt0aGlzLnByb3BzLnBsYXllckluZm8ucGxheWVyLmVsb30pPC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkIGNhcmQtY29tcGFjdC1yb3VuZHMtYm9hcmRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyIHRleHQtY2VudGVyXCI+TWF0Y2hlcyBmb3Ige3RoaXMucHJvcHMucGxheWVySW5mby5wbGF5ZXIubmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidGFibGUgdGFibGUtc3RyaXBlZCB0YWJsZS1zbVwiPlxuICAgICAgICAgICAgICAgICAgPHRoZWFkPlxuICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGg+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInRleHQtcmlnaHRcIj5XaGl0ZSBwbGF5ZXI8L3RoPlxuICAgICAgICAgICAgICAgICAgICA8dGg+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPkJsYWNrIHBsYXllcjwvdGg+XG4gICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgIHtpdGVtc31cbiAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBDb21wYWN0UGxheWVyTWF0Y2hlc0l0ZW0ocGxheWVyLCBtYXRjaCkge1xuXG4gIGxldCB3aGl0ZUNsYXNzID0gbWF0Y2gucmVzdWx0ID09PSAxID8gJ2JnLXdvbicgOiBtYXRjaC5yZXN1bHQgPT09IDAgPyAnYmctbG9zZScgOiBudWxsO1xuICBsZXQgYmxhY2tDbGFzcyA9IG1hdGNoLnJlc3VsdCA9PT0gMCA/ICdiZy13b24nIDogbWF0Y2gucmVzdWx0ID09PSAxID8gJ2JnLWxvc2UnIDogbnVsbDtcblxuICBsZXQgd2hpdGVCb2xkID0gbWF0Y2gud2hpdGVQbGF5ZXIucGxheWVyLnV1aWQgPT0gcGxheWVyLnV1aWQgPyAnZm9udC13ZWlnaHQtYm9sZCcgOiAnJztcbiAgbGV0IGJsYWNrQm9sZCA9IG1hdGNoLmJsYWNrUGxheWVyLnBsYXllci51dWlkID09IHBsYXllci51dWlkID8gJ2ZvbnQtd2VpZ2h0LWJvbGQnIDogJyc7XG5cbiAgcmV0dXJuIChcbiAgICAgIDx0ciBrZXk9e21hdGNoLnV1aWR9PlxuICAgICAgICA8dGQ+PExpbmsgdG89e2AvbS8ke21hdGNoLnV1aWR9YH0+I3ttYXRjaC51dWlkLnNwbGl0KCctJylbMF19PC9MaW5rPjwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzc05hbWU9e2B0ZXh0LXJpZ2h0ICR7d2hpdGVDbGFzc30gJHt3aGl0ZUJvbGR9YH0+XG4gICAgICAgICAge21hdGNoLndoaXRlUGxheWVyLnBsYXllci5uYW1lfSAoe21hdGNoLndoaXRlUGxheWVyLm9yaWdpbmFsRWxvfSlcbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPjxpIGNsYXNzTmFtZT1cImZhIGZhLW1pbnVzXCI+PC9pPjwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzc05hbWU9e2B0ZXh0LWxlZnQgJHtibGFja0NsYXNzfSAke2JsYWNrQm9sZH1gfT5cbiAgICAgICAgICB7bWF0Y2guYmxhY2tQbGF5ZXIucGxheWVyLm5hbWV9ICh7bWF0Y2guYmxhY2tQbGF5ZXIub3JpZ2luYWxFbG99KVxuICAgICAgICA8L3RkPlxuICAgICAgPC90cj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxheWVyUGFnZTsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgTm90Rm91bmRQYWdlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+Tm90IGZvdW5kPC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vdEZvdW5kUGFnZTsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgTWF0Y2hQYWdlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgPGgxPk1hdGNoIHt0aGlzLnByb3BzLm1hdGNoSW5mby51dWlkfTwvaDE+XG4gICAgICAgICAgICAgIDxoMz48Yj5NYXRjaCByZXN1bHQ6PC9iPiB7dGhpcy5wcm9wcy5tYXRjaEluZm8ucmVzdWx0ID09PSAxID8gJ1doaXRlIHdpbnMnIDogdGhpcy5wcm9wcy5tYXRjaEluZm8ucmVzdWx0ID09PSAwID8gJ0JsYWNrIHdpbnMnIDogJ1dpdGhkcmF3J308L2gzPlxuICAgICAgICAgICAgICA8aDU+PGI+RGF0ZTo8L2I+IHt0aGlzLnByb3BzLm1hdGNoSW5mby5kYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpfSB7dGhpcy5wcm9wcy5tYXRjaEluZm8uZGF0ZS50b0xvY2FsZVRpbWVTdHJpbmcoKX08L2g1PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTEyIGNvbC1sZy02XCI+XG4gICAgICAgICAgICAgIDxoMj5XaGl0ZSBwbGF5ZXI8L2gyPlxuXG4gICAgICAgICAgICAgIDxkbCBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICA8ZHQgY2xhc3NOYW1lPVwiY29sLXNtLTNcIj5OYW1lPC9kdD5cbiAgICAgICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPVwiY29sLXNtLTlcIj57dGhpcy5wcm9wcy5tYXRjaEluZm8ud2hpdGVQbGF5ZXIucGxheWVyLm5hbWV9PC9kZD5cblxuICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9XCJjb2wtc20tM1wiPkNoYW5jZSB0byB3aW48L2R0PlxuICAgICAgICAgICAgICAgIDxkZCBjbGFzc05hbWU9XCJjb2wtc20tOVwiPnsgKHRoaXMucHJvcHMubWF0Y2hJbmZvLndoaXRlUGxheWVyLmNoYW5jZSAqIDEwMCkudG9GaXhlZCgyKX0lPC9kZD5cblxuICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9XCJjb2wtc20tM1wiPk9yaWdpbmFsIGVsbzwvZHQ+XG4gICAgICAgICAgICAgICAgPGRkIGNsYXNzTmFtZT1cImNvbC1zbS05XCI+e3RoaXMucHJvcHMubWF0Y2hJbmZvLndoaXRlUGxheWVyLm9yaWdpbmFsRWxvfTwvZGQ+XG5cbiAgICAgICAgICAgICAgICA8ZHQgY2xhc3NOYW1lPVwiY29sLXNtLTNcIj5GaW5hbCBlbG88L2R0PlxuICAgICAgICAgICAgICAgIDxkZCBjbGFzc05hbWU9XCJjb2wtc20tOVwiPnt0aGlzLnByb3BzLm1hdGNoSW5mby53aGl0ZVBsYXllci5maW5hbEVsb308L2RkPlxuICAgICAgICAgICAgICA8L2RsPlxuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTIgY29sLWxnLTZcIj5cbiAgICAgICAgICAgICAgPGgyPkJsYWNrIHBsYXllcjwvaDI+XG5cbiAgICAgICAgICAgICAgPGRsIGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9XCJjb2wtc20tM1wiPk5hbWU8L2R0PlxuICAgICAgICAgICAgICAgIDxkZCBjbGFzc05hbWU9XCJjb2wtc20tOVwiPnt0aGlzLnByb3BzLm1hdGNoSW5mby5ibGFja1BsYXllci5wbGF5ZXIubmFtZX08L2RkPlxuXG4gICAgICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT1cImNvbC1zbS0zXCI+Q2hhbmNlIHRvIHdpbjwvZHQ+XG4gICAgICAgICAgICAgICAgPGRkIGNsYXNzTmFtZT1cImNvbC1zbS05XCI+eyAodGhpcy5wcm9wcy5tYXRjaEluZm8uYmxhY2tQbGF5ZXIuY2hhbmNlICogMTAwKS50b0ZpeGVkKDIpfSU8L2RkPlxuXG4gICAgICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT1cImNvbC1zbS0zXCI+T3JpZ2luYWwgZWxvPC9kdD5cbiAgICAgICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPVwiY29sLXNtLTlcIj57dGhpcy5wcm9wcy5tYXRjaEluZm8uYmxhY2tQbGF5ZXIub3JpZ2luYWxFbG99PC9kZD5cblxuICAgICAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9XCJjb2wtc20tM1wiPkZpbmFsIGVsbzwvZHQ+XG4gICAgICAgICAgICAgICAgPGRkIGNsYXNzTmFtZT1cImNvbC1zbS05XCI+e3RoaXMucHJvcHMubWF0Y2hJbmZvLmJsYWNrUGxheWVyLmZpbmFsRWxvfTwvZGQ+XG4gICAgICAgICAgICAgIDwvZGw+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNYXRjaFBhZ2U7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7TGluaywgUm91dGV9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5mdW5jdGlvbiBOYXZJdGVtKHt0bywgbmFtZX0pIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlXG4gICAgICAgICAgcGF0aD17dG99XG4gICAgICAgICAgZXhhY3Q9e3RydWV9XG4gICAgICAgICAgY2hpbGRyZW49eyh7IG1hdGNoIH0pID0+IChcbiAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17bWF0Y2ggPyAnbmF2LWl0ZW0gYWN0aXZlJyA6ICduYXYtaXRlbSd9PlxuICAgICAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cIm5hdi1saW5rXCIgdG89e3RvfT57bmFtZX08L0xpbms+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgKX1cbiAgICAgIC8+XG4gICk7XG59XG5cbmNsYXNzIE5hdmJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPG5hdiBjbGFzc05hbWU9XCJuYXZiYXIgbmF2YmFyLWV4cGFuZC1sZyBuYXZiYXItZGFyayBiZy1kYXJrXCI+XG4gICAgICAgICAgPExpbmsgY2xhc3NOYW1lPVwibmF2YmFyLWJyYW5kXCIgdG89e2AvYH0+Q2hlc3NFbG8gKFJlYWN0IGJ1aWxkKTwvTGluaz5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm5hdmJhci10b2dnbGVyXCJcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXG4gICAgICAgICAgICAgICAgICBkYXRhLXRhcmdldD1cIiNhcHBOYXZiYXJcIlxuICAgICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz1cImFwcE5hdmJhclwiXG4gICAgICAgICAgICAgICAgICBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlRvZ2dsZSBuYXZpZ2F0aW9uXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYXZiYXItdG9nZ2xlci1pY29uXCI+PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlXCIgaWQ9XCJhcHBOYXZiYXJcIj5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJuYXZiYXItbmF2IG1yLWF1dG9cIj5cbiAgICAgICAgICAgICAgPE5hdkl0ZW0gdG89e2AvYH0gbmFtZT1cIkhvbWVcIi8+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25hdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTmF2YmFyOyIsImltcG9ydCB1dWlkIGZyb20gJ3V1aWQvdjEnO1xuaW1wb3J0IGlzIGZyb20gJ2lzX2pzJztcbmltcG9ydCAkQ2hhbmNlIGZyb20gJ2NoYW5jZSc7XG5cbmNvbnN0IGNoYW5jZSA9IG5ldyAkQ2hhbmNlKCk7XG5cbmNsYXNzIFBsYXllciB7XG5cbiAgLyoqXG4gICAqIFVuaXF1ZSB1dWlkIGZvciBlYWNoIHBsYXllclxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0IHV1aWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lkO1xuICB9XG5cbiAgLyoqXG4gICAqIEVsbyBvZiB0aGUgcGxheWVyXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBnZXQgZWxvKCkge1xuICAgIHJldHVybiB0aGlzLl9lbG87XG4gIH1cblxuICAvKipcbiAgICogRWxvIG9mIHRoZSBwbGF5ZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IG5ld0Vsb1xuICAgKi9cbiAgc2V0IGVsbyhuZXdFbG8pIHtcbiAgICB0aGlzLl9lbG8gPSBuZXdFbG87XG4gIH1cblxuICAvKipcbiAgICogTmFtZSBvZiB0aGUgcGxheWVyXG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gIH1cblxuICAvKipcbiAgICogQ29uc3RydWN0b3JcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHRocm93cyB7RXJyb3J9IGlmIG5vIG5hbWUgYXJndW1lbnQgaXMgZ2l2ZW5cbiAgICovXG4gIGNvbnN0cnVjdG9yKG5hbWUpIHtcblxuICAgIGlmKGlzLnVuZGVmaW5lZChuYW1lKSB8fCBpcy5udWxsKG5hbWUpIHx8ICFpcy5zdHJpbmcobmFtZSkgfHwgaXMuZW1wdHkobmFtZS50cmltKCkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBzaG91bGQgc3BlY2lmeSBuYW1lIGFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fZWxvID0gMTUwMDtcbiAgICB0aGlzLl9pZCA9IHV1aWQoKTtcbiAgfVxufVxuXG5QbGF5ZXIuZ2VuZXJhdGUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBQbGF5ZXIoY2hhbmNlLm5hbWUoe21pZGRsZTogdHJ1ZX0pKTtcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUGxheWVyOyIsIlxuXG5jbGFzcyBSb3VuZCB7XG5cbiAgZ2V0IHBsYXlEYXRlKCkgeyByZXR1cm4gdGhpcy5fcGxheURhdGU7IH1cbiAgZ2V0IG51bWJlcigpIHsgcmV0dXJuIHRoaXMuX251bWJlcjsgfVxuICBnZXQgbWF0Y2hlcygpIHsgcmV0dXJuIHRoaXMuX21hdGNoZXM7IH1cbiAgZ2V0IHNjb3JlQm9hcmQoKSB7IHJldHVybiB0aGlzLl9zY29yZUJvYXJkOyB9XG5cbiAgY29uc3RydWN0b3Iocm91bmROdW1iZXIsIG1hdGNoZXMsIHNjb3JlQm9hcmQsIGRhdGUpIHtcbiAgICB0aGlzLl9udW1iZXIgPSByb3VuZE51bWJlcjtcbiAgICB0aGlzLl9tYXRjaGVzID0gbWF0Y2hlcztcbiAgICB0aGlzLl9zY29yZUJvYXJkID0gc2NvcmVCb2FyZDtcbiAgICB0aGlzLl9wbGF5RGF0ZSA9IGRhdGU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm91bmQ7IiwiaW1wb3J0IHV1aWQgZnJvbSAndXVpZC92MSc7XG5pbXBvcnQgaXMgZnJvbSAnaXNfanMnO1xuaW1wb3J0IFBsYXllciBmcm9tICcuL1BsYXllcic7XG5cbi8qKlxuICpcbiAqL1xuY2xhc3MgTWF0Y2gge1xuXG4gIC8qKlxuICAgKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0IHV1aWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lkO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEByZXR1cm5zIHtNYXRjaFBsYXllcn1cbiAgICovXG4gIGdldCB3aGl0ZVBsYXllcigpIHtcbiAgICByZXR1cm4gdGhpcy5fd2hpdGVQbGF5ZXI7XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHJldHVybnMge01hdGNoUGxheWVyfVxuICAgKi9cbiAgZ2V0IGJsYWNrUGxheWVyKCkge1xuICAgIHJldHVybiB0aGlzLl9ibGFja1BsYXllcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBhIG51bWJlciB0aGF0IGV4cHJlc3Mgd2hhdCB3YXMgdGhlIHJlc3VsdCBvZiB0aGUgbWF0Y2g6XG4gICAqIC0gbnVsbDogIE1hdGNoIHdhc24ndCByZWFsaXplZFxuICAgKiAtIDE6IHdoaXRlIHdvblxuICAgKiAtIDA6IGJsYWNrIHdvblxuICAgKiAtIDAuNTogd2l0aGRyYXdzXG4gICAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAqL1xuICBnZXQgcmVzdWx0KCkge1xuICAgIHJldHVybiB0aGlzLl9yZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGRhdGUgd2hlcmUgdGhpcyBtYXRjaCB3YXMgcGxheWVkXG4gICAqIEByZXR1cm5zIHtudWxsfVxuICAgKi9cbiAgZ2V0IGRhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RhdGU7XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHtQbGF5ZXJ9IHdoaXRlUGxheWVyXG4gICAqIEBwYXJhbSB7UGxheWVyfSBibGFja1BsYXllclxuICAgKi9cbiAgY29uc3RydWN0b3Iod2hpdGVQbGF5ZXIsIGJsYWNrUGxheWVyKSB7XG5cbiAgICBpZihpcy5udWxsKHdoaXRlUGxheWVyKSB8fCAhKHdoaXRlUGxheWVyIGluc3RhbmNlb2YgUGxheWVyKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdXaGl0ZSBwbGF5ZXIgc2hvdWxkIGJlIGFuIGluc3RhbmNlIG9mIFBsYXllcicpO1xuICAgIH1cblxuICAgIGlmKGlzLm51bGwoYmxhY2tQbGF5ZXIpIHx8ICEoYmxhY2tQbGF5ZXIgaW5zdGFuY2VvZiBQbGF5ZXIpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JsYWNrIHBsYXllciBzaG91bGQgYmUgYW4gaW5zdGFuY2Ugb2YgUGxheWVyJyk7XG4gICAgfVxuXG4gICAgdGhpcy5faWQgPSB1dWlkKCk7XG5cbiAgICBsZXQgcUEgPSBNYXRoLnBvdygxMCwgd2hpdGVQbGF5ZXIuZWxvIC8gNDAwKTtcbiAgICBsZXQgcUIgPSBNYXRoLnBvdygxMCwgYmxhY2tQbGF5ZXIuZWxvIC8gNDAwKTtcblxuICAgIGxldCB3aGl0ZUNoYW5jZSA9IHFBIC8gKHFBICsgcUIpO1xuICAgIGxldCBibGFja0NoYW5jZSA9IHFCIC8gKHFBICsgcUIpO1xuXG4gICAgdGhpcy5fd2hpdGVQbGF5ZXIgPSBuZXcgTWF0Y2hQbGF5ZXIod2hpdGVQbGF5ZXIsIHdoaXRlQ2hhbmNlKTtcbiAgICB0aGlzLl9ibGFja1BsYXllciA9IG5ldyBNYXRjaFBsYXllcihibGFja1BsYXllciwgYmxhY2tDaGFuY2UpO1xuXG4gICAgLy9NYXRjaCBkb2Vzbid0IGhhdmUgYSByZXN1bHQgeWV0XG4gICAgdGhpcy5fcmVzdWx0ID0gbnVsbDtcblxuICAgIC8vVGhlIGRhdGUgd2hlcmUgdGhlIG1hdGNoIHdhcyBkb25lXG4gICAgdGhpcy5fZGF0ZSA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogUGxheXMgdGhlIG1hdGNoLCBpbmRpY2F0aW5nIHdoYXQncyB0aGUgbWF0Y2ggcmVzdWx0IGFuZCB3aGVuIGl0IHdhcyBwbGF5ZWRcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG1hdGNoUmVzdWx0XG4gICAqIEBwYXJhbSB7RGF0ZX0gZGF0ZVxuICAgKi9cbiAgcGxheShtYXRjaFJlc3VsdCwgZGF0ZSkge1xuXG4gICAgaWYodGhpcy5fcmVzdWx0ICE9IG51bGwpIHsgdGhyb3cgbmV3IEVycm9yKCdtYXRjaCB3YXMgYWxyZWFkeSBwbGF5ZWQnKTsgfVxuXG4gICAgaWYoWzEsIDAuNSwgMF0uaW5kZXhPZihtYXRjaFJlc3VsdCkgPCAwICkgeyB0aHJvdyBuZXcgRXJyb3IoJ21hdGNoUmVzdWx0IHNob3VsZCBiZSAxLCAwLjUgb3IgMCB2YWx1ZXMnKTsgfVxuXG4gICAgdGhpcy5fcmVzdWx0ID0gbWF0Y2hSZXN1bHQ7XG4gICAgdGhpcy5fZGF0ZSA9IGRhdGU7XG5cbiAgICBzd2l0Y2gobWF0Y2hSZXN1bHQpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgdGhpcy53aGl0ZVBsYXllci5wbGF5ZXIuZWxvICs9IHRoaXMud2hpdGVQbGF5ZXIub25XaW47XG4gICAgICAgIHRoaXMuYmxhY2tQbGF5ZXIucGxheWVyLmVsbyArPSB0aGlzLmJsYWNrUGxheWVyLm9uTG9zZTtcblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAwLjU6XG5cbiAgICAgICAgdGhpcy53aGl0ZVBsYXllci5wbGF5ZXIuZWxvICs9IHRoaXMud2hpdGVQbGF5ZXIub25XaXRoZHJhdztcbiAgICAgICAgdGhpcy5ibGFja1BsYXllci5wbGF5ZXIuZWxvICs9IHRoaXMuYmxhY2tQbGF5ZXIub25XaXRoZHJhdztcblxuICAgICAgICBicmVhaztcblxuXG4gICAgICBjYXNlIDA6XG4gICAgICAgIHRoaXMud2hpdGVQbGF5ZXIucGxheWVyLmVsbyArPSB0aGlzLndoaXRlUGxheWVyLm9uTG9zZTtcbiAgICAgICAgdGhpcy5ibGFja1BsYXllci5wbGF5ZXIuZWxvICs9IHRoaXMuYmxhY2tQbGF5ZXIub25XaW47XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICB9XG5cbiAgICAvL1VwZGF0ZSBtYXRjaCBmaW5hbCBlbG9cbiAgICB0aGlzLndoaXRlUGxheWVyLmZpbmFsRWxvID0gdGhpcy53aGl0ZVBsYXllci5wbGF5ZXIuZWxvO1xuICAgIHRoaXMuYmxhY2tQbGF5ZXIuZmluYWxFbG8gPSB0aGlzLmJsYWNrUGxheWVyLnBsYXllci5lbG87XG4gIH1cbn1cblxuXG5jbGFzcyBNYXRjaFBsYXllciB7XG5cbiAgZ2V0IHBsYXllcigpIHsgcmV0dXJuIHRoaXMuX3BsYXllcjsgfVxuICBnZXQgY2hhbmNlKCkgeyByZXR1cm4gdGhpcy5fY2hhbmNlOyB9XG4gIGdldCBrRmFjdG9yKCkgeyByZXR1cm4gdGhpcy5fa0ZhY3RvcjsgfVxuICBnZXQgb3JpZ2luYWxFbG8oKSB7IHJldHVybiB0aGlzLl9vcmlnaW5hbEVsbzsgfVxuICBnZXQgZmluYWxFbG8oKSB7IHJldHVybiB0aGlzLl9maW5hbEVsbzsgfVxuICBzZXQgZmluYWxFbG8obmV3RWxvKSB7IHRoaXMuX2ZpbmFsRWxvID0gbmV3RWxvOyB9XG5cblxuICBnZXQgb25XaW4oKSB7IHJldHVybiB0aGlzLl9vbldpbjsgfVxuICBnZXQgb25Mb3NlKCkgeyByZXR1cm4gdGhpcy5fb25Mb3NlOyB9XG4gIGdldCBvbldpdGhkcmF3KCkgeyByZXR1cm4gdGhpcy5fb25XaXRoZHJhdzsgfVxuXG4gIGNvbnN0cnVjdG9yKHBsYXllciwgY2hhbmNlKSB7XG4gICAgdGhpcy5fcGxheWVyID0gcGxheWVyO1xuICAgIHRoaXMuX2NoYW5jZSA9IGNoYW5jZTtcbiAgICB0aGlzLl9rRmFjdG9yID0gdGhpcy5fcGxheWVyLmVsbyA+IDI0MDAgPyAxNSA6IDMwO1xuXG4gICAgdGhpcy5fb3JpZ2luYWxFbG8gPSBwbGF5ZXIuZWxvO1xuICAgIHRoaXMuX2ZpbmFsRWxvID0gbnVsbDtcblxuICAgIHRoaXMuX29uV2luID0gTWF0aC5yb3VuZCh0aGlzLl9rRmFjdG9yICogKDEgLSBjaGFuY2UpKTtcbiAgICB0aGlzLl9vbkxvc2UgPSBNYXRoLnJvdW5kKHRoaXMuX2tGYWN0b3IgKiAoMCAtIGNoYW5jZSkpO1xuICAgIHRoaXMuX29uV2l0aGRyYXcgPSBNYXRoLnJvdW5kKHRoaXMuX2tGYWN0b3IgKiAoMC41IC0gY2hhbmNlKSk7XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBNYXRjaDsiLCJcbmNsYXNzIFNjb3JlQm9hcmQge1xuXG4gIGdldCBpdGVtcygpIHsgcmV0dXJuIHRoaXMuX2l0ZW1zOyB9XG5cblxuICBjb25zdHJ1Y3RvcihwbGF5ZXJzLCBwcmV2aW91c1Njb3JlQm9hcmQpIHtcbiAgICB0aGlzLl9pdGVtcyA9IFtdO1xuXG4gICAgbGV0IG5ld1BsYXllcnNBcnIgPSBwbGF5ZXJzLnNsaWNlKCk7XG4gICAgbmV3UGxheWVyc0Fyci5zb3J0KChhLCBiKSA9PiBiLmVsbyAtIGEuZWxvKTtcblxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBuZXdQbGF5ZXJzQXJyLmxlbmd0aDsgaSsrKSB7XG5cbiAgICAgIGxldCBwbGF5ZXIgPSBuZXdQbGF5ZXJzQXJyW2ldO1xuXG4gICAgICBsZXQgcHJldmlvdXNJdGVtID0gbnVsbDtcblxuICAgICAgLy9JZiB0aGVyZSB3YXMgYSBwcmV2aW91cyBzY29yZGUgYm9hcmRcbiAgICAgIGlmKHByZXZpb3VzU2NvcmVCb2FyZCkge1xuICAgICAgICBwcmV2aW91c0l0ZW0gPSBwcmV2aW91c1Njb3JlQm9hcmQuaXRlbXMuZmlsdGVyKHggPT4geC5wbGF5ZXIudXVpZCA9PSBwbGF5ZXIudXVpZCkuc2hpZnQoKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGl0ZW0gPSBuZXcgU2NvcmVCb2FyZEl0ZW0ocGxheWVyLCBpICsgMSwgcHJldmlvdXNJdGVtKTtcblxuICAgICAgdGhpcy5faXRlbXMucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cblxufVxuXG5jbGFzcyBTY29yZUJvYXJkSXRlbSB7XG5cbiAgZ2V0IHBvc2l0aW9uKCkgeyByZXR1cm4gdGhpcy5fcG9zaXRpb247IH1cbiAgZ2V0IHBvc2l0aW9uQ2hhbmdlKCkgeyByZXR1cm4gdGhpcy5fcG9zaXRpb25DaGFuZ2U7IH1cbiAgZ2V0IHBsYXllcigpIHsgcmV0dXJuIHRoaXMuX3BsYXllcjsgfVxuXG5cbiAgY29uc3RydWN0b3IocGxheWVyLCBwb3NpdGlvbiwgcHJldmlvdXNJdGVtKSB7XG5cbiAgICB0aGlzLl9wbGF5ZXIgPSBwbGF5ZXI7XG4gICAgdGhpcy5fcG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICB0aGlzLl9wb3NpdGlvbkNoYW5nZSA9IDA7XG5cbiAgICBpZihwcmV2aW91c0l0ZW0gIT0gbnVsbCkge1xuICAgICAgdGhpcy5fcG9zaXRpb25DaGFuZ2UgPSBwcmV2aW91c0l0ZW0ucG9zaXRpb24gLSB0aGlzLnBvc2l0aW9uO1xuICAgIH1cblxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNjb3JlQm9hcmQ7IiwiaW1wb3J0IFBsYXllciBmcm9tICcuLi9tb2RlbHMvUGxheWVyJztcbmltcG9ydCBNYXRjaCBmcm9tICcuLi9tb2RlbHMvTWF0Y2gnO1xuXG5jbGFzcyBFbG9TZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIC8qKlxuICAgKiBQbGF5cyBhIG1hdGNoIGFuZCBnZW5lcmF0ZXMgaXQncyByZXN1bHRcbiAgICogQHBhcmFtIG1hdGNoXG4gICAqIEBwYXJhbSBkYXRlXG4gICAqL1xuICBwbGF5QU1hdGNoKG1hdGNoLCBkYXRlKSB7XG4gICAgaWYoIW1hdGNoIHx8ICEobWF0Y2ggaW5zdGFuY2VvZiBNYXRjaCkpIHsgdGhyb3cgbmV3IEVycm9yKCdtYXRjaCBhcmd1bWVudCBpcyByZXF1aXJlZCcpOyB9XG5cbiAgICBsZXQgd2hpdGVEaWNlID0gTWF0aC5yYW5kb20oKTtcbiAgICBsZXQgYmxhY2tEaWNlID0gTWF0aC5yYW5kb20oKTtcblxuICAgIC8vSWYgaXQncyBhIHdpdGhkcmF3XG4gICAgaWYod2hpdGVEaWNlIDw9IG1hdGNoLndoaXRlUGxheWVyLmNoYW5jZSAmJiBibGFja0RpY2UgPD0gbWF0Y2guYmxhY2tQbGF5ZXIuY2hhbmNlIHx8XG4gICAgICB3aGl0ZURpY2UgPiBtYXRjaC53aGl0ZVBsYXllci5jaGFuY2UgJiYgYmxhY2tEaWNlID4gbWF0Y2guYmxhY2tQbGF5ZXIuY2hhbmNlKSB7XG5cbiAgICAgIG1hdGNoLnBsYXkoMC41LCBkYXRlKTtcbiAgICB9XG4gICAgLy9XaGl0ZXMgd29uXG4gICAgZWxzZSBpZih3aGl0ZURpY2UgPCBtYXRjaC53aGl0ZVBsYXllci5jaGFuY2UpIHtcbiAgICAgIG1hdGNoLnBsYXkoMSwgZGF0ZSk7XG4gICAgfVxuICAgIC8vQmxhY2sgd29uXG4gICAgZWxzZSB7XG4gICAgICBtYXRjaC5wbGF5KDAsIGRhdGUpO1xuICAgIH1cblxuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgKG5ldyBFbG9TZXJ2aWNlKCkpOyIsIlxuaW1wb3J0IFBsYXllciBmcm9tICcuL1BsYXllcic7XG5pbXBvcnQgUm91bmQgZnJvbSAnLi9Sb3VuZCc7XG5pbXBvcnQgTWF0Y2ggZnJvbSAnLi9NYXRjaCc7XG5pbXBvcnQgU2NvcmVCb2FyZCBmcm9tICcuL1Njb3JlQm9hcmQnO1xuaW1wb3J0IGVsb1NlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvRWxvU2VydmljZSc7XG5cbmNsYXNzIEdhbWUge1xuXG4gIGdldCBwbGF5ZXJzKCkgeyByZXR1cm4gdGhpcy5fcGxheWVyczsgfVxuICBnZXQgcm91bmRzKCkgeyByZXR1cm4gdGhpcy5fcm91bmRzOyB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fcGxheWVycyA9IF9nZW5lcmF0ZVBsYXllcnMoKTtcbiAgICB0aGlzLl9yb3VuZHMgPSBbXTtcblxuICAgIF9nZW5lcmF0ZVBsYXllcnMoKTtcblxuICAgIC8vR2VuZXJhdGUgZmlyc3Qgcm91bmRcbiAgICB0aGlzLnBsYXlOZXh0Um91bmQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKi9cbiAgcGxheU5leHRSb3VuZCgpIHtcbiAgICBsZXQgcHJldmlvdXNTY29yZUJvYXJkID0gdGhpcy5yb3VuZHMubGVuZ3RoID4gMCA/IHRoaXMucm91bmRzW3RoaXMucm91bmRzLmxlbmd0aCAtIDFdLnNjb3JlQm9hcmQgOiBudWxsO1xuICAgIGxldCByb3VuZE51bWJlciA9IHRoaXMucm91bmRzLmxlbmd0aCArIDE7XG4gICAgbGV0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIGxldCBtYXRjaGVzID0gX2dlbmVyYXRlTWF0Y2hlcyh0aGlzLnBsYXllcnMsIGRhdGUpO1xuICAgIGxldCBzY29yZUJvYXJkID0gbmV3IFNjb3JlQm9hcmQodGhpcy5wbGF5ZXJzLCBwcmV2aW91c1Njb3JlQm9hcmQpO1xuXG4gICAgdGhpcy5fcm91bmRzLnB1c2gobmV3IFJvdW5kKHJvdW5kTnVtYmVyLCBtYXRjaGVzLCBzY29yZUJvYXJkLCBkYXRlKSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmVzIHRoZSBsYXN0IHJvdW5kXG4gICAqIEByZXR1cm5zIHtSb3VuZH1cbiAgICovXG4gIGdldExhc3RSb3VuZCgpIHtcbiAgICBpZih0aGlzLnJvdW5kcy5sZW5ndGggPT09IDApIHsgcmV0dXJuIG51bGw7fVxuICAgIHJldHVybiB0aGlzLnJvdW5kc1t0aGlzLnJvdW5kcy5sZW5ndGggLSAxXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgcGxheWVyIEluZm9cbiAgICogQHBhcmFtIHBsYXllclV1aWRcbiAgICogQHJldHVybnMgeyp9XG4gICAqL1xuICBnZXRQbGF5ZXJJbmZvKHBsYXllclV1aWQpIHtcbiAgICBsZXQgcGxheWVySW5mbyA9IHtcbiAgICAgIHBsYXllcjogbnVsbCxcbiAgICAgIG1hdGNoZXM6IFtdXG4gICAgfTtcblxuICAgIHBsYXllckluZm8ucGxheWVyID0gdGhpcy5wbGF5ZXJzLmZpbHRlcih4ID0+IHgudXVpZCA9PSBwbGF5ZXJVdWlkKS5zaGlmdCgpO1xuICAgIGlmKCFwbGF5ZXJJbmZvLnBsYXllcikgeyByZXR1cm4gbnVsbDsgfVxuXG4gICAgLy9BZGQgcGxheWVyIG1hdGNoZXNcbiAgICBmb3IobGV0IHJvdW5kIG9mIHRoaXMucm91bmRzKSB7XG4gICAgICBsZXQgbWF0Y2ggPSByb3VuZC5tYXRjaGVzXG4gICAgICAgICAgLmZpbHRlcih4ID0+IHgud2hpdGVQbGF5ZXIucGxheWVyLnV1aWQgPT0gcGxheWVyVXVpZCB8fCB4LmJsYWNrUGxheWVyLnBsYXllci51dWlkID09IHBsYXllclV1aWQpXG4gICAgICAgICAgLnNoaWZ0KCk7XG5cbiAgICAgIGlmKG1hdGNoKSB7XG4gICAgICAgIHBsYXllckluZm8ubWF0Y2hlcy5wdXNoKHtcbiAgICAgICAgICByb3VuZE51bWJlcjogcm91bmQubnVtYmVyLFxuICAgICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcGxheWVySW5mbztcbiAgfVxuXG4gIGdldE1hdGNoSW5mbyhtYXRjaFV1aWQpIHtcblxuICAgIGxldCBtYXRjaCA9IG51bGw7XG5cbiAgICBmb3IobGV0IHJvdW5kIG9mIHRoaXMucm91bmRzKSB7XG4gICAgICBtYXRjaCA9IHJvdW5kLm1hdGNoZXMuZmlsdGVyKHggPT4geC51dWlkID09IG1hdGNoVXVpZCkuc2hpZnQoKTtcbiAgICAgIGlmKG1hdGNoKSB7IGJyZWFrOyB9XG4gICAgfVxuXG5cbiAgICByZXR1cm4gbWF0Y2g7XG4gIH1cblxufVxuXG4vL0F0IGZpcnN0IG1vbWVudCB3ZSB3aWxsIGdlbmVyYXRlIG1hdGNoZXMganVzdCBtYWtpbmcgZW0gcmFuZG9tbHlcbmZ1bmN0aW9uIF9nZW5lcmF0ZU1hdGNoZXMocGxheWVycywgZGF0ZSkge1xuICBsZXQgcmVzdWx0ID0gW107XG5cbiAgbGV0IHBsYXllcnNSYW5kb20gPSBwbGF5ZXJzLnNsaWNlKCk7XG4gIHBsYXllcnNSYW5kb20uc29ydCgoYSwgYikgPT4gTWF0aC5yYW5kb20oKSAqIDEwIC0gNSk7XG5cbiAgLy9TcGxpdCBhcnJheVxuICBsZXQgaXRlbXMgPSBwbGF5ZXJzUmFuZG9tLnNwbGljZSgwLCBNYXRoLmZsb29yKHBsYXllcnNSYW5kb20ubGVuZ3RoIC8gMikpO1xuICBsZXQgbWF4TGVuZ3RoID0gTWF0aC5taW4oaXRlbXMubGVuZ3RoLCBwbGF5ZXJzUmFuZG9tLmxlbmd0aCk7XG5cbiAgZm9yKGxldCBpID0gMDsgaSA8IG1heExlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHdoaXRlUGxheWVyID0gaXRlbXNbaV07XG4gICAgbGV0IGJsYWNrUGxheWVyID0gcGxheWVyc1JhbmRvbVtpXTtcblxuICAgIGxldCBtYXRjaCA9IG5ldyBNYXRjaCh3aGl0ZVBsYXllciwgYmxhY2tQbGF5ZXIpO1xuICAgIGVsb1NlcnZpY2UucGxheUFNYXRjaChtYXRjaCwgZGF0ZSk7XG5cbiAgICByZXN1bHQucHVzaChtYXRjaCk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFdpbGwgZ2VuZXJhdGUgYXBwbGljYXRpb24gcGxheWVyc1xuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX2dlbmVyYXRlUGxheWVycygpIHtcbiAgbGV0IHJlc3VsdCA9IFtdO1xuICBmb3IobGV0IGkgPSAwOyBpIDwgMTAwMDsgaSsrKSB7XG4gICAgcmVzdWx0LnB1c2goUGxheWVyLmdlbmVyYXRlKCkpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgR2FtZTsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7SGFzaFJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuXG5pbXBvcnQgSW5kZXhQYWdlIGZyb20gJy4vY29tcG9uZW50cy9wYWdlcy9JbmRleFBhZ2UnO1xuaW1wb3J0IFBsYXllclBhZ2UgZnJvbSAnLi9jb21wb25lbnRzL3BhZ2VzL1BsYXllclBhZ2UnO1xuaW1wb3J0IE5vdEZvdW5kUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvcGFnZXMvTm90Rm91bmRQYWdlJztcbmltcG9ydCBNYXRjaFBhZ2UgZnJvbSAnLi9jb21wb25lbnRzL3BhZ2VzL01hdGNoUGFnZSc7XG5cbmltcG9ydCBOYXZiYXIgZnJvbSAnLi9jb21wb25lbnRzL05hdmJhcic7XG5cbmltcG9ydCBHYW1lIGZyb20gJy4vbW9kZWxzL0dhbWUnO1xuXG5jbGFzcyBNYWluIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAvL0dlbmVyYXRlIGEgZ2FtZSBhbmQgc3RvcmUgaXQgYXMgdmFyaWFibGVcbiAgICB0aGlzLmdhbWUgPSBuZXcgR2FtZSgpO1xuICAgIHRoaXMuY3VycmVudFJvdW5kTnVtYmVyID0gdGhpcy5nYW1lLnJvdW5kc1t0aGlzLmdhbWUucm91bmRzLmxlbmd0aCAtIDFdLm51bWJlcjtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBnYW1lUm91bmQ6IHRoaXMuZ2FtZS5nZXRMYXN0Um91bmQoKVxuICAgIH07XG5cblxuICAgIHRoaXMub25QcmV2Um91bmQgPSB0aGlzLm9uUHJldlJvdW5kLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbk5leHRSb3VuZCA9IHRoaXMub25OZXh0Um91bmQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9uUHJldlJvdW5kKCkge1xuXG4gICAgaWYodGhpcy5jdXJyZW50Um91bmROdW1iZXIgPT09IDEpIHsgcmV0dXJuOyB9XG5cbiAgICB0aGlzLmN1cnJlbnRSb3VuZE51bWJlciAtPSAxO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZ2FtZVJvdW5kOiB0aGlzLmdhbWUucm91bmRzW3RoaXMuY3VycmVudFJvdW5kTnVtYmVyIC0gMV1cbiAgICB9KTtcblxuICB9XG5cbiAgb25OZXh0Um91bmQoKSB7XG5cbiAgICBpZih0aGlzLmN1cnJlbnRSb3VuZE51bWJlciArIDEgPiB0aGlzLmdhbWUucm91bmRzLmxlbmd0aCkge1xuICAgICAgdGhpcy5nYW1lLnBsYXlOZXh0Um91bmQoKTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRSb3VuZE51bWJlciArPSAxO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBnYW1lUm91bmQ6IHRoaXMuZ2FtZS5yb3VuZHNbdGhpcy5jdXJyZW50Um91bmROdW1iZXIgLSAxXVxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxSb3V0ZXI+XG4gICAgICAgICAgPE5hdmJhciBsb2NhdGlvbj17dGhpcy5wcm9wcy5sb2NhdGlvbn0+PC9OYXZiYXI+XG5cblxuICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIHJlbmRlcj17KCkgPT4gKFxuICAgICAgICAgICAgICA8SW5kZXhQYWdlIGdhbWVSb3VuZD17dGhpcy5zdGF0ZS5nYW1lUm91bmR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgb25QcmV2Um91bmQ9e3RoaXMub25QcmV2Um91bmR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgb25OZXh0Um91bmQ9e3RoaXMub25OZXh0Um91bmR9Lz5cbiAgICAgICAgICApfSAvPlxuXG4gICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvbS86dXVpZFwiIHJlbmRlcj17KHttYXRjaCwgaGlzdG9yeX0pID0+IHtcbiAgICAgICAgICAgIGxldCBtYXRjaEluZm8gPSB0aGlzLmdhbWUuZ2V0TWF0Y2hJbmZvKG1hdGNoLnBhcmFtcy51dWlkKTtcblxuICAgICAgICAgICAgaWYoIW1hdGNoSW5mbykge1xuICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goJy80MDQvJyk7XG4gICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gKDxNYXRjaFBhZ2UgbWF0Y2hJbmZvPXttYXRjaEluZm99IC8+KTtcbiAgICAgICAgICB9fSAvPlxuXG4gICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvcC86dXVpZFwiIHJlbmRlcj17KHttYXRjaCwgaGlzdG9yeX0pID0+IHtcbiAgICAgICAgICAgIGxldCBwbGF5ZXJJbmZvID0gdGhpcy5nYW1lLmdldFBsYXllckluZm8obWF0Y2gucGFyYW1zLnV1aWQpO1xuXG4gICAgICAgICAgICBpZighcGxheWVySW5mbykge1xuICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goJy80MDQvJyk7XG4gICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gKDxQbGF5ZXJQYWdlIHBsYXllckluZm89e3BsYXllckluZm99IC8+KTtcbiAgICAgICAgICB9fSAvPlxuXG5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cIi80MDQvXCIgY29tcG9uZW50PXtOb3RGb3VuZFBhZ2V9PjwvUm91dGU+XG4gICAgICAgIDwvUm91dGVyPlxuXG4gICAgKTtcbiAgfVxufVxuXG5cblxuZXhwb3J0IGRlZmF1bHQgTWFpbjsiLCJpbXBvcnQgJy4vc2Fzcy9tYWluLnNjc3MnO1xuaW1wb3J0ICdib290c3RyYXAnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RG9tIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBNYWluIGZyb20gJy4vYXBwL01haW4nO1xuXG5cblJlYWN0RG9tLnJlbmRlcig8TWFpbiAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7Il0sInNvdXJjZVJvb3QiOiIifQ==